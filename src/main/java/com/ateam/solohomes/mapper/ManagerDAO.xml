<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ateam.solohomes.beans.manager.ManagerDAO">

	<!-- index -->
	<select id="getMonthlySales" resultType="com.ateam.solohomes.beans.manager.MonthlySalesDTO">
		SELECT * 
		FROM (
			SELECT mid(py_regdate, 1, 7) 'year_month', SUM(IFNULL(py_amount * g.g_price, 0)) amount
			FROM 
				payment py
				JOIN goods_info gi ON py.in_uid = gi.in_uid
				JOIN goods g ON gi.g_uid = g.g_uid
			GROUP BY 1
			ORDER BY 1 DESC
			LIMIT 0, 6) tb
		ORDER BY 1 ASC
	</select>
	<select id="getDailySalesByMonth" resultType="com.ateam.solohomes.beans.manager.DailySalesDTO">
		SELECT
			mid(py_regdate, 1, 10) 'day', SUM(IFNULL(py_amount * g.g_price, 0)) amount, COUNT(gi.in_uid) quantity
		FROM 
			payment py
			JOIN goods_info gi ON py.in_uid = gi.in_uid
			JOIN goods g ON gi.g_uid = g.g_uid
		WHERE
			mid(py.py_regdate, 1, 7) = #{month}
		GROUP BY 1
		ORDER BY 1 DESC
	</select>
	
	<!-- member -->
	<select id="selectAllUserByRow" resultType="com.ateam.solohomes.beans.manager.MemberRenumDTO">
		<![CDATA[
			SELECT 
				mb.mb_uid uid, mb.mb_id id, mb.mb_nn nn,
				mb.mb_name name, mb.mb_phone phone, mb.mb_email email,
				mb.mb_zipcode zipcode, mb.mb_addr addr, mb.mb_addr2 addr2,
				mb.mb_regdate regdate, mb.mb_level level, NVL(SUM(re.reportedNum), 0) reportedNum
			FROM
				member mb
				LEFT OUTER JOIN 
					(
						SELECT
							co.co_uid co_uid, co.mb_uid mb_uid, count(cr.re_uid) reportedNum
						FROM
							comment co
						LEFT OUTER JOIN
							co_report cr
							ON co.co_uid = cr.co_uid
						GROUP BY co.co_uid
					) re 
				ON mb.mb_uid = re.mb_uid
			WHERE
				mb.mb_level = 1
			GROUP BY
				mb.mb_uid
			ORDER BY
				mb.mb_uid
			LIMIT
				#{startRow}, #{listPage}
		]]>
	</select>	
	<select id="selectAllUserByRowReportedNum" resultType="com.ateam.solohomes.beans.manager.MemberRenumDTO">
		<![CDATA[
			SELECT 
				mb.mb_uid uid, mb.mb_id id, mb.mb_nn nn,
				mb.mb_name name, mb.mb_phone phone, mb.mb_email email,
				mb.mb_zipcode zipcode, mb.mb_addr addr, mb.mb_addr2 addr2,
				mb.mb_regdate regdate, mb.mb_level level, IFNULL(SUM(re.reportedNum), 0) reportedNum
			FROM
				member mb
				LEFT OUTER JOIN 
					(
						SELECT
							co.co_uid co_uid, co.mb_uid mb_uid, count(cr.re_uid) reportedNum
						FROM
							comment co
						LEFT OUTER JOIN
							co_report cr
							ON co.co_uid = cr.co_uid
						GROUP BY co.co_uid
					) re 
				ON mb.mb_uid = re.mb_uid
			WHERE
				mb.mb_level = 1
			GROUP BY
				mb.mb_uid
			ORDER BY
				reportedNum DESC
			LIMIT
				#{startRow}, #{listPage}
		]]>
	</select>
	<select id="selectAllUserByRowRegdate" resultType="com.ateam.solohomes.beans.manager.MemberRenumDTO">
		<![CDATA[
			SELECT 
				mb.mb_uid uid, mb.mb_id id, mb.mb_nn nn,
				mb.mb_name name, mb.mb_phone phone, mb.mb_email email,
				mb.mb_zipcode zipcode, mb.mb_addr addr, mb.mb_addr2 addr2,
				mb.mb_regdate regdate, mb.mb_level level, IFNULL(SUM(re.reportedNum), 0) reportedNum
			FROM
				member mb
				LEFT OUTER JOIN 
					(
						SELECT
							co.co_uid co_uid, co.mb_uid mb_uid, count(cr.re_uid) reportedNum
						FROM
							comment co
						LEFT OUTER JOIN
							co_report cr
							ON co.co_uid = cr.co_uid
						GROUP BY co.co_uid
					) re 
				ON mb.mb_uid = re.mb_uid
			WHERE
				mb.mb_level = 1
			GROUP BY
				mb.mb_uid
			ORDER BY
				mb.mb_regdate DESC
			LIMIT
				#{startRow}, #{listPage}
		]]>
	</select>
	<select id="selectAllUserByRowId" resultType="com.ateam.solohomes.beans.manager.MemberRenumDTO">
		<![CDATA[
			SELECT 
				mb.mb_uid uid, mb.mb_id id, mb.mb_nn nn,
				mb.mb_name name, mb.mb_phone phone, mb.mb_email email,
				mb.mb_zipcode zipcode, mb.mb_addr addr, mb.mb_addr2 addr2,
				mb.mb_regdate regdate, mb.mb_level level, IFNULL(SUM(re.reportedNum), 0) reportedNum
			FROM
				member mb
				LEFT OUTER JOIN 
					(
						SELECT
							co.co_uid co_uid, co.mb_uid mb_uid, count(cr.re_uid) reportedNum
						FROM
							comment co
						LEFT OUTER JOIN
							co_report cr
							ON co.co_uid = cr.co_uid
						GROUP BY co.co_uid
					) re 
				ON mb.mb_uid = re.mb_uid
			WHERE
				mb.mb_level = 1
			GROUP BY
				mb.mb_uid
			ORDER BY
				mb.mb_id ASC
			LIMIT
				#{startRow}, #{listPage}
		]]>
	</select>
	<select id="selectAllUserByRowNN" resultType="com.ateam.solohomes.beans.manager.MemberRenumDTO">
		<![CDATA[
			SELECT 
				mb.mb_uid uid, mb.mb_id id, mb.mb_nn nn,
				mb.mb_name name, mb.mb_phone phone, mb.mb_email email,
				mb.mb_zipcode zipcode, mb.mb_addr addr, mb.mb_addr2 addr2,
				mb.mb_regdate regdate, mb.mb_level level, IFNULL(SUM(re.reportedNum), 0) reportedNum
			FROM
				member mb
				LEFT OUTER JOIN 
					(
						SELECT
							co.co_uid co_uid, co.mb_uid mb_uid, count(cr.re_uid) reportedNum
						FROM
							comment co
						LEFT OUTER JOIN
							co_report cr
							ON co.co_uid = cr.co_uid
						GROUP BY co.co_uid
					) re 
				ON mb.mb_uid = re.mb_uid
			WHERE
				mb.mb_level = 1
			GROUP BY
				mb.mb_uid
			ORDER BY
				mb.mb_nn ASC
			LIMIT
				#{startRow}, #{listPage}
		]]>
	</select>
	<select id="selectAllAdminByRow" resultType="com.ateam.solohomes.beans.manager.MemberRenumDTO">
		<![CDATA[
			SELECT 
				mb.mb_uid uid, mb.mb_id id, mb.mb_nn nn,
				mb.mb_name name, mb.mb_phone phone, mb.mb_email email,
				mb.mb_zipcode zipcode, mb.mb_addr addr, mb.mb_addr2 addr2,
				mb.mb_regdate regdate, mb.mb_level level
			FROM
				member mb
			WHERE
				mb.mb_level = 2
			ORDER BY
				mb.mb_uid
			LIMIT
				#{startRow}, #{listPage}
		]]>
	</select>
	
	<delete id="deleteMembersByUid" flushCache="true">
		DELETE FROM
			member
		WHERE
			mb_uid IN
		<foreach item="uid" index="index" collection="uidList" open="(" separator="," close=")">
			#{uid}
		</foreach>
	</delete>
	
	<!-- Request -->
	<select id="selectAllRequestByRow" resultType="com.ateam.solohomes.beans.manager.RequestDTO">
		<![CDATA[
			SELECT 
				mb.mb_id id, rq.rq_uid uid,
				rq.rq_type 'type', rq.rq_subject subject, rq.rq_content content,  
				rq.rq_response response, rq.rq_regdate regdate
			FROM member mb 
				JOIN request rq 
				ON rq.mb_uid = mb.mb_uid
			ORDER BY 
				rq.rq_regdate DESC
			LIMIT 
				#{startRow}, #{listPage}
		]]>
	</select>
	<select id="selectAllRequestNoResponseByRow" resultType="com.ateam.solohomes.beans.manager.RequestDTO">
		<![CDATA[
			SELECT 
				mb.mb_id id, rq.rq_uid uid,
				rq.rq_type 'type', rq.rq_subject subject, rq.rq_content content,  
				rq.rq_response response, rq.rq_regdate regdate
			FROM member mb 
				JOIN request rq 
				ON rq.mb_uid = mb.mb_uid
			WHERE 
				rq.rq_response IS NULL
			ORDER BY 
				rq.rq_regdate ASC
			LIMIT 
				#{startRow}, #{listPage}
		]]>
	</select>
	<select id="selectRequestByUid" resultType="com.ateam.solohomes.beans.manager.RequestDTO">
		<![CDATA[
			SELECT 
				mb.mb_id id, rq.rq_uid uid,
				rq.rq_type 'type', rq.rq_subject subject, rq.rq_content content,  
				rq.rq_response response, rq.rq_regdate regdate
			FROM member mb 
				JOIN request rq 
				ON rq.mb_uid = mb.mb_uid
			WHERE 
				rq.rq_uid = #{uid}
		]]>
	</select>
	<update id="updateRequestByUid" flushCache="true">
		UPDATE
			request 
		SET 
			rq_response = #{response}
		WHERE
			rq_uid = #{uid}
	</update>
	<delete id="deleteRequestsByUids" flushCache="true">
		DELETE FROM
			request
		WHERE
			rq_uid IN
		<foreach item="uid" index="index" collection="uidList" open="(" separator="," close=")">
			#{uid}
		</foreach>
	</delete>
	
	<!-- Comment -->
	<select id="selectAllCommentByRow" resultType="com.ateam.solohomes.beans.manager.CommentRenumDTO">
		<![CDATA[
			SELECT 
				co.co_uid co_uid, co.mb_uid mb_uid, co.g_uid g_uid, 
				 co.co_subject subject, co.co_content content, co.co_regdate regdate, 
				 count(re.re_uid) reportedNum,
				 mb.mb_id mb_id, g.g_name g_name
			FROM comment co
				LEFT OUTER JOIN co_report re ON co.co_uid = re.co_uid
				JOIN member mb ON co.mb_uid = mb.mb_uid
				JOIN goods g ON co.g_uid = g.g_uid
			GROUP BY 
				co.co_uid
			ORDER BY 
				co.co_regdate DESC
			LIMIT 
				#{startRow}, #{listPage}
			;
		]]>	
	</select>
	<select id="selectAllCommenType1" resultType="com.ateam.solohomes.beans.manager.CommentRenumDTO">
		<![CDATA[
			SELECT 
				co.co_uid co_uid, co.mb_uid mb_uid, co.g_uid g_uid, 
				 co.co_subject subject, co.co_content content, co.co_regdate regdate, 
				 count(re.re_uid) reportedNum,
				 mb.mb_id mb_id, g.g_name g_name
			FROM comment co
				LEFT OUTER JOIN co_report re ON co.co_uid = re.co_uid
				JOIN member mb ON co.mb_uid = mb.mb_uid
				JOIN goods g ON co.g_uid = g.g_uid
			GROUP BY 
				co.co_uid
			ORDER BY 
				reportedNum DESC, co.co_regdate DESC
			LIMIT 
				#{startRow}, #{listPage}
		]]>	
	</select>
	<select id="selectCommentByUid" resultType="com.ateam.solohomes.beans.manager.CommentRenumDTO">
		<![CDATA[
			SELECT 
				co.co_uid co_uid, co.mb_uid mb_uid, co.g_uid g_uid, 
				 co.co_subject subject, co.co_content content, co.co_regdate regdate, 
				 count(re.re_uid) reportedNum,
				 mb.mb_id mb_id, g.g_name g_name
			FROM comment co
				LEFT OUTER JOIN co_report re ON co.co_uid = re.co_uid
				JOIN member mb ON co.mb_uid = mb.mb_uid
				JOIN goods g ON co.g_uid = g.g_uid
			WHERE 
				co.co_uid = #{uid}
			GROUP BY 
				co.co_uid
		]]>	
	</select>
	<delete id="deleteCommentsByUids" flushCache="true">
		DELETE FROM
			comment
		WHERE
			co_uid IN
		<foreach item="uid" index="index" collection="uidList" open="(" separator="," close=")">
			#{uid}
		</foreach>
	</delete>
	
	<!-- Goods -->
	<select id="selectSortedGoodsByType" resultType="com.ateam.solohomes.beans.manager.GoodsSalNumDTO">
		SELECT 
			g.g_uid g_uid,
			g.g_type g_type,
			g.g_name g_name,
			g.g_img g_img,
			IFNULL(g.g_size, "") g_size,
			g.g_price g_price,
			g.g_likecnt g_likecnt,
			IFNULL(tb.salNum, 0) salNum
		FROM 
			goods g 
			LEFT OUTER JOIN (
				SELECT 
					gi.g_uid g_uid, count(*) salNum
				FROM 
					payment py 
					JOIN goods_info gi ON py.in_uid = gi.in_uid
				GROUP BY 
					gi.g_uid
			) tb ON g.g_uid = tb.g_uid
		<if test="type != 0">
		WHERE
			g_type = #{type}
		</if>
		ORDER BY
			#{columnNum} ${sord}
		LIMIT
			#{startRow}, #{listPage}
	</select>
	<delete id="deleteGoodsByUids" flushCache="true">
		DELETE FROM
			goods
		WHERE
			g_uid IN
		<foreach item="uid" index="index" collection="uidList" open="(" separator="," close=")">
			#{uid}
		</foreach>
	</delete>
	
	<!-- Series -->
	<resultMap  id="serieses" type="com.ateam.solohomes.beans.manager.SeriesComponentsDTO">
		<result property="sr_uid" column="sr_uid"/>
		<result property="sr_subject" column="sr_subject"/>
		<result property="sr_img" column="sr_img"/>
		<result property="sr_regdate" column="sr_regdate"/>
		<collection property="goodsList" column="sr_uid"
			javaType="java.util.ArrayList" ofType="com.ateam.solohomes.beans.GoodsDTO"
			select="getGoodsListBySrUid"/>
	</resultMap>
	<select id="selectSeriesByUid" resultMap="serieses">
		SELECT * FROM series WHERE sr_uid = #{uid}
	</select>
	<select id="selectSerieses" resultMap="serieses">
		SELECT * FROM series
	</select>
	<select id="getGoodsListBySrUid" resultType="com.ateam.solohomes.beans.GoodsDTO">
		SELECT 
			g.g_uid g_uid, g.g_type g_type,	g.g_name g_name,
			g.g_img g_img, g.g_size g_size, g.g_price g_price, g.g_likecnt g_likecnt 
		FROM 
			goods g 
			JOIN series_goods sg ON g.g_uid = sg.g_uid
		WHERE sg.sr_uid = #{sr_uid};
	</select>
	<delete id="deleteSeriesByUids" flushCache="true">
		DELETE FROM
			series
		WHERE
			sr_uid IN
		<foreach item="uid" index="index" collection="uidList" open="(" separator="," close=")">
			#{uid}
		</foreach>
	</delete>
	
</mapper>       
    